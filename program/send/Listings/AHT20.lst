C51 COMPILER V9.60.0.0   AHT20                                                             04/09/2023 07:57:33 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE AHT20
OBJECT MODULE PLACED IN .\Objects\AHT20.obj
COMPILER INVOKED BY: D:\Kile V5\C51\BIN\C51.EXE AHT20.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\AHT
                    -20.lst) TABS(2) OBJECT(.\Objects\AHT20.obj)

line level    source

   1          #include "AHT20.h"
   2          
   3          AHT20TypeDef_Data AHT20_Environmentinfo;
   4          
   5          bit AHT20_ChangeCompleted,AHT20_DataAvailable;
   6          
   7          void resetReg(unsigned char addr){
   8   1        unsigned char buffer[2]={0,0};
   9   1        hardwareI2CStart();
  10   1        hardwareI2CSendBeyt(0x70);
  11   1        hardwareI2CSendBeyt(addr);
  12   1        hardwareI2CSendBeyt(0x00);
  13   1        hardwareI2CSendBeyt(0x00);
  14   1        hardwareI2CStop();
  15   1        hardwareI2CStart();
  16   1        hardwareI2CSendBeyt(0x71);
  17   1        hardwareI2CReceiveBeyt(1);
  18   1        buffer[0]=hardwareI2CReceiveBeyt(1);
  19   1        buffer[1]=hardwareI2CReceiveBeyt(1);
  20   1        hardwareI2CStop();
  21   1        hardwareI2CStart();
  22   1        hardwareI2CSendBeyt(0x70);
  23   1        hardwareI2CSendBeyt(0xB0|addr);
  24   1        hardwareI2CSendBeyt(buffer[0]);
  25   1        hardwareI2CSendBeyt(buffer[1]);
  26   1        hardwareI2CStop();
  27   1      }
  28          
  29          void regInit(void){
  30   1        resetReg(0x1B);
  31   1        resetReg(0x1C);
  32   1        resetReg(0x1E);
  33   1      }
  34          
  35          void AHT20_Init(void){
  36   1        hardwareI2CStart();
  37   1        hardwareI2CSendBeyt(0x70);
  38   1        hardwareI2CSendBeyt(0xA8);
  39   1        hardwareI2CSendBeyt(0x00);
  40   1        hardwareI2CSendBeyt(0x00);
  41   1        hardwareI2CStop();
  42   1        hardwareI2CStart();
  43   1        hardwareI2CSendBeyt(0x70);
  44   1        hardwareI2CSendBeyt(0xBE);
  45   1        hardwareI2CSendBeyt(0x08);
  46   1        hardwareI2CSendBeyt(0x00);
  47   1        hardwareI2CStop();
  48   1        hardwareI2CStart();
  49   1        hardwareI2CSendBeyt(0x71);
  50   1        if((hardwareI2CReceiveBeyt(0)&0x18)!=0x18){
  51   2          hardwareI2CStop();
  52   2          regInit();
  53   2        }else
  54   1          hardwareI2CStop();
C51 COMPILER V9.60.0.0   AHT20                                                             04/09/2023 07:57:33 PAGE 2   

  55   1      }
  56          
  57          void AHT20_SendMeasureCmd(void){
  58   1        hardwareI2CStart();
  59   1        hardwareI2CSendBeyt(0x70);
  60   1        hardwareI2CSendBeyt(0xAC);
  61   1        hardwareI2CSendBeyt(0x33);
  62   1        hardwareI2CSendBeyt(0x00);
  63   1        hardwareI2CStop();
  64   1      }
  65          
  66          unsigned char CRC8Cheak(unsigned char* massage,unsigned char len){
  67   1        unsigned char i,j;
  68   1        unsigned char CRC=0xFF;
  69   1        for(j=0;j<len;j++){
  70   2          CRC^=(massage[j]);
  71   2          for(i=0;i<8;i++){
  72   3            if(CRC&0x80)
  73   3              CRC=(CRC<<1)^CRC8CODE;
  74   3            else
  75   3              CRC<<=1;
  76   3          }
  77   2        }
  78   1        return CRC;
  79   1      }
  80          
  81          void AHT20_ReadData(void){
  82   1        if(AHT20_ChangeCompleted){
  83   2        unsigned long temperature=0,humidity=0;
  84   2        unsigned char buffer[6];
  85   2        unsigned char CRC;
  86   2        unsigned char i;
  87   2        hardwareI2CStart();
  88   2        hardwareI2CSendBeyt(0x71);
  89   2        buffer[0]=hardwareI2CReceiveBeyt(1);
  90   2        if(buffer[0]&0x80!=0){
  91   3          AHT20_Environmentinfo.status=1;
  92   3          AHT20_Environmentinfo.humidity=0;
  93   3          AHT20_Environmentinfo.temperature=0;
  94   3          hardwareI2CStop();
  95   3          return;
  96   3        }
  97   2        for(i=0;i<5;i++)
  98   2          buffer[i+1]=hardwareI2CReceiveBeyt(1);
  99   2        CRC=hardwareI2CReceiveBeyt(0);
 100   2        hardwareI2CStop();
 101   2        AHT20_SendMeasureCmd();
 102   2        if(CRC8Cheak(buffer,6)!=CRC){
 103   3          AHT20_Environmentinfo.status=2;
 104   3          AHT20_Environmentinfo.humidity=0;
 105   3          AHT20_Environmentinfo.temperature=0;
 106   3          return;
 107   3        }
 108   2        AHT20_Environmentinfo.status=0;
 109   2        humidity|=buffer[1];
 110   2        humidity<<=8;
 111   2        humidity|=buffer[2];
 112   2        humidity<<=8;
 113   2        humidity|=buffer[3];
 114   2        humidity>>=4;
 115   2        temperature|=(buffer[3]&0x0F);
 116   2        temperature<<=8;
C51 COMPILER V9.60.0.0   AHT20                                                             04/09/2023 07:57:33 PAGE 3   

 117   2        temperature|=buffer[4];
 118   2        temperature<<=8;
 119   2        temperature|=buffer[5];
 120   2        AHT20_Environmentinfo.humidity=humidity*1000/1048576;
 121   2        AHT20_Environmentinfo.temperature=(float)temperature*100*200/1048576-5000;
 122   2        AHT20_ChangeCompleted=0;
 123   2        AHT20_DataAvailable=1;
 124   2        }
 125   1      }
 126          
 127          bit AHT20_GetDataAvailableFlag(void){
 128   1        return AHT20_DataAvailable;
 129   1      }
 130          
 131          void AHT20_ChangeCompletedFlagSet(void){
 132   1        AHT20_ChangeCompleted=1;
 133   1      }
 134          
 135          AHT20TypeDef_Data* AHT20_GetData(void){
 136   1        AHT20_DataAvailable=0;
 137   1        return &AHT20_Environmentinfo;
 138   1      }
 139          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    751    ----
   CONSTANT SIZE    =      2    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
